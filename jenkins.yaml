pipeline:
  agent:
    label: "any"  # Run on any available agent

  environment:
    BROWSER_LIST: "chrome,firefox"  # List of browsers to run tests on
    VENV_DIR: "myenv"  # Virtual environment directory

  stages:
    - stage: "Checkout"
      steps:
        - script: 
            sh: "git checkout main"  # Checkout code from Git
    
    - stage: "Setup Environment"
      steps:
        - script:
            sh: |
              python3 -m venv myenv
              source myenv/Scripts/activate 
              pip install -r requirements.txt
    
    - stage: "Run Tests on Multiple Browsers"
      parallel:
        chrome:
          steps:
            - script:
                sh: |
                  source myenv/Scripts/activate 
                  pytest --browser chrome --html=report_chrome.html --self-contained-html --maxfail=1 --disable-warnings
        firefox:
          steps:
            - script:
                sh: |
                  source myenv/Scripts/activate 
                  pytest --browser firefox --html=report_firefox.html --self-contained-html --maxfail=1 --disable-warnings
    
    - stage: "Collect Reports"
      steps:
        - script:
            sh: |
              # Archive the reports for each browser
              echo "Archiving reports..."
              mv report_chrome.html reports/report_chrome.html
              mv report_firefox.html reports/report_firefox.html
          
    - stage: "Post Actions"
      steps:
        - script:
            sh: "echo 'Cleaning up workspace'"
  
  post:
    always:
      - script:
          sh: "echo 'Pipeline complete'"
    success:
      - script:
          sh: "echo 'All tests passed successfully'"
    failure:
      - script:
          sh: "echo 'Pipeline failed, check reports for details'"

  options:
    timeout: 30  # Timeout for the pipeline in minutes
    buildDiscarder:
      logRotator:
        numToKeep: 10  # Keep only the last 10 builds
    timestamps: true  # Add timestamps to logs
